services:
  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
  kibana:
    image: kibana:7.17.0
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  logstash:
    image: logstash:7.17.0
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./nginx_logs:/var/log/nginx
      - ./backend_logs:/var/log/backend
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
  nginx:
    image: nginx:1.19
    container_name: nginx
    ports:
      - "8005:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/code
      - ./nginx_logs:/var/log/nginx
    depends_on:
      - login_backend
      - frontend
  login_db:
    image: postgres:12
    container_name: login_db
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - "8004:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 30s
      retries: 10
      start_period: 2s
    volumes:
      - ./postgres:/var/lib/postgresql/data
  login_backend:
    image: login_backend
    container_name: login_backend
    build: 
      context: ./login
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
      - "8002:587"
    working_dir: /code
    restart: always
    volumes:
      - ./login:/code
      - ./backend_logs:/code/logs
    env_file:
      - .env
    depends_on:
      login_db:
        condition: service_healthy
  frontend:
    image: frontend
    container_name: frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    working_dir: /code
    restart: always
    volumes:
      - ./frontend:/code
    env_file:
      - .env
    depends_on:
      login_db:
        condition: service_healthy
networks:
  default:
      driver: bridge